ddd:
  context: transtour
---
web:
  cors:
    allowed-origins: "http://localhost:3000"
    allowed-methods: GET, POST, PATCH, PUT, DELETE, OPTIONS, HEAD
    max-age: 3600
    allowed-headers: "Requestor-Type"
    exposed-headers: "X-Get-Header"

---
spring:
  profiles: h2

  datasource:
    driverClassName: org.h2.Driver
    password: sa
    username: sa
    url: jdbc:h2:mem:testdb;INIT=create domain if not exists jsonb as text;MODE=PostgreSQL;DB_CLOSE_DELAY=-1
  h2:
    console:
      enabled: true

  jpa:
    generate-ddl: true
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.H2Dialect
---
spring:
  profiles: postgres
  sql:
    init:
      mode: always
  datasource:
    url: ENC(0M3iQOQdS1lNBdvLyljP1VLfGCk2mMXv16V40ug0kFGEUNRwydo43HR0PklE/2BIkJQ6We/Arno=)
    username: postgres
    password: ''
    driver-class-name: org.postgresql.Driver
  jpa:
    generate-ddl: true
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: create
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect


---
spring:
  profiles: mail
  mail:
    host: smtp.gmail.com
    password: ENC(s2Sj+LCCGIpzeNyboZkLC/hPVaJfdpMueqNPUk0+5k8=)
    properties:
      mail:
        smtp:
          auth: true
          socketFactory:
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
            port: 465
          ssl:
            enable: true
    username: ENC(FqmEuzWO0bRUxEefkMqa447q1L5SkfvPSZjiCLTUBVg=)




---
spring:
  profiles: global

jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    pool-size: 2
    iv-generator-classname: org.jasypt.iv.NoIvGenerator


---

spring:
  profiles: property

FIREBASE:
  API_URL: https://fcm.googleapis.com/fcm/send
  AUTHENTICATION:
    ANDROID: ENC(to6v28S1HT9E7Bf6V3L6vEzSIwlXj5od9vUrmRivnQGbIY+kTT/ZNNKpxuKOt/u4KiIitIduuwtzw1TJtWu14jIyvceQpzOCFjWYA91/iVDkRT5X7iC2ksX0fNJiP20BOsnzjXddMk7x723Ui623QO/pfY/9u+NGsCliJwt6a7gW6Bhgd/tc3R3gkzS3RkKC+GInscr5huZXBT21AQirx8VPjAKk0ORr)
    IOS: ENC(z1+hZjB7kiSzgWWO+ejRjdn+7lgNKqJCJDzwMyYdDUgZtjZ4p/rpqff9aNj7/NGgw8TY9gfgBEfIfxAdMx0lxWLSVO1QMQ6Kucnb59gGy+0QSJtN6D5DABXBpc8me5BNX6p2zIRkNsmuhRhkjLtNTZIJB0v2MOvHX4pnK5TOEb9dQ72MemHpH+i9cozNYqLYpkm+jjjZXeiHJAbZpGCN4xmKFPE4cl99)

